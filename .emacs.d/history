;; -*- mode: emacs-lisp; coding: utf-8-unix -*-
;; Minibuffer history file, automatically generated by ‘savehist’.

(setq savehist-minibuffer-history-variables '(org-tags-history org-read-date-history regexp-search-ring input-method-history grep-history ido-buffer-history extended-command-history ido-file-history query-replace-history yes-or-no-p-history file-name-history minibuffer-history empty-history buffer-name-history helm-M-x-input-history))
(setq org-tags-history '("house"))
(setq org-read-date-history '("   "))
(setq regexp-search-ring '(#("mode-line" 0 9 (isearch-case-fold-search t)) #("modeline" 0 8 (isearch-case-fold-search t)) #("custom-enabl" 0 12 (isearch-case-fold-search t)) #("custom en" 0 9 (isearch-case-fold-search t)) #("nim" 0 3 (isearch-case-fold-search t)) #("nimbu" 0 5 (isearch-case-fold-search t)) #("window-divider-mode" 0 19 (isearch-case-fold-search t)) #("selected" 0 8 (isearch-case-fold-search t)) #("add-to-list 'load-path" 0 22 (isearch-case-fold-search t)) #("autolist" 0 8 (isearch-case-fold-search t)) #("org-auto-li" 0 11 (isearch-case-fold-search t)) #("adbo" 0 4 (isearch-case-fold-search t)) #("custom\\.el" 0 10 (isearch-case-fold-search t)) #("custom.el" 0 9 (isearch-case-fold-search t)) #("11" 0 2 (isearch-case-fold-search t)) #("100" 0 3 (isearch-case-fold-search t))))
(setq grep-history '("grep --color -nH --null -e validate_virtual_nic_network" "grep --color -nH --null -e DeviceTemplate"))
(setq ido-buffer-history '(".emacs" "*Warnings*" "*Compile-Log*" ".emacs"))
(setq extended-command-history '("all-the-icons-install-fonts" "customize-group" "package-list-packages" "customize-themes" "package-install" "load-file" "package-list-packages" "load-file" "markdown-mode" "markdown" "org-indent-mode" "load-file" "package-list-packages" "org-mode" "text-mode" "comment-region" "package-list-packages" "comment-region" "package-list-packages" "load-file" "disable-theme" "lsp-find-references" "replace-string" "load-file" "treemacs" "treemacs-mode" "package-list-packages" "lsp-find-references" "lsp-toggle-on-type-formatting" "lsp-format-buffer" "customize-option" "load-file" "describe-mode" "lsp-mode" "eldoc-mode" "describe-mode" "load-file" "describe-mode" "load-file" "describe-mode" "seeing-is-believing" "describe-mode" "load-file" "describe-mode" "which-key-mode" "load-file" "which-key-mode" "package-list-packages" "uncomment-region" "comment-region" "replace-string" "flymake-mode" "replace-string" "uncomment-region" "comment-region" "replace-string" "comment-region" "replace-string" "uncomment-region" "comment-region" "uncomment-region" "comment-region" "load-file" "lsp-describe-thing-at-point" "comment-region" "replace-string" "comment-region" "replace-string" "comment-region" "sort-lines" "comment-region" "sort-lines" "replace-string" "uncomment-region" "comment-region" "uncomment-region" "comment-region" "uncomment-region" "comment-region" "replace-string" "comment-region" "replace-string" "sort-lines" "replace-string" "comment-region" "replace-string" "comment-region" "replace-string" "recover-session" "uncomment-region" "replace-string" "comment-region" "replace-string" "recover-this-file" "replace-string" "shell" "replace-string" "comment-region" "uncomment-region" "comment-region"))
(setq query-replace-history '("staged_file_path" "new_file_path" "im_listener" "listener" "new_backup_dir" "new_backup_path" "@new_backup_path" "new_backup_path" "" "param_bucket." "" "@" "" "@" "service_name" "display_name.downcase" "" #("@param_bucket," 0 4 (face font-lock-variable-name-face) 4 12 (face font-lock-variable-name-face) 12 13 (face font-lock-variable-name-face rear-nonsticky t)) "" #("@param_bucket" 0 4 (face font-lock-variable-name-face) 4 12 (face font-lock-variable-name-face) 12 13 (face font-lock-variable-name-face rear-nonsticky t)) "" ", param_bucket" "" "param_bucket," "@log" "param_bucket.log" "status" "response" "backup_thread" "orchestration" "BackupRestoreService" #("Backuprestoreservice" 0 19 (face font-lock-type-face) 19 20 (face font-lock-type-face rear-nonsticky t)) "backuprestoreservice" "orchestrationservice" "Backup Create Listener" "Create Backup Listener" "doWork " "doWork  " ", doWork " " doWork," "backup" "domain" "param_bucket.conn" "@conn" "param_bucket.log" "@log" "" #("BackupUtility." 0 13 (face font-lock-type-face)) "BackupUtility" "backup_utility" "@log" "@logger" "@rmq_conn" "@conn" "" #(" @exchange," 1 10 (face font-lock-variable-name-face)) "@conn" "@rmq_conn" "conn" "rmq_conn" "@log" "@logger" "parsed_payload" "working" "" #(".split('::')" 7 11 (face font-lock-string-face)) "dump_database" "find_databases" "version_object" "service_module" "service_module" "prime_module" "service_name" "mod3" "core" "mod2" "slamr" "mod1" "cybercents" "mod0" "master_manifest" "result" "fetch_available_services" "backup_routes" "backup_route" "value" "service" "key" "manifest" "backup_result" "" "===| " "service_name" "key" "backup_routes" "get_backup_routes" ": #" " :" "  :" " }.to"))
(setq yes-or-no-p-history '("yes"))
(setq file-name-history '("~/.emacs" "~/.emacs.d/custom.el" "~/.emacs" "~/.homesick/repos/emacs.d/.emacs.d/custom.el" "~/.homesick/repos/dotfiles/home/.emacs" "~/.emacs" "~/org/todos.org" "~/org/journal.org" "~/.emacs.d/custom.el" "~/.homesick/repos/dotfiles/home/.emacs" "~/.emacs.d/custom.el" "~/.emacs" "~/.homesick/repos/dotfiles/home/.emacs" "~/.emacs" "~/Documents/org-docs/*.org" "~/.emacs" "~/Documents/org-docs/todo.org" "~/.emacs" "~/Documents/personal/best-trump-rant.txt" "~/.homesick/repos/dotfiles/home/.emacs" "~/.emacs" "~/repos/slamr-backup-restore-service/" "~/repos/slamr-backup-restore-service/lib/cybercents/slamr/core/backuprestore/service/amqp/routes/backup/backup_routes.rb" "~/.homesick/repos/dotfiles/home/.emacs" "~/.emacs" "~/.homesick/repos/dotfiles/home/.emacs" "~/.emacs" "~/repos/slamr-orchestration-service/lib/cybercents/slamr/core/orchestration/service/core.rb" "~/.emacs" "~/repos/slamr-orchestration-service/lib/cybercents/slamr/core/orchestration/service/amqp/routes/device/device_routes.rb" "~/.homesick/repos/dotfiles/home/.emacs" "~/repos/slamr-orchestration-service/lib/cybercents/slamr/core/orchestration/service.rb" "~/.emacs" "~/repos/slamr-orchestration-service/lib/cybercents/slamr/core/orchestration/service/amqp/routes/device/device_routes.rb" "~/repos/slamr-orchestration-service/lib/cybercents/slamr/core/orchestration/service/core.rb" "~/.homesick/repos/dotfiles/home/.emacs" "~/.emacs" "~/.homesick/repos/dotfiles/home/.emacs" "~/.emacs" "~/.homesick/repos/dotfiles/home/.emacs" "~/repos/slamr-orchestration-service/lib/cybercents/slamr/core/orchestration/service/core.rb" "~/.homesick/repos/dotfiles/home/.emacs" "~/.emacs" "~/repos/slamr-orchestration-service/lib/cybercents/slamr/core/orchestration/service/core.rb" "~/repos/slamr-infrastructure-manager/lib/cybercents/slamr/core/infrastructure/manager/amqp/routes/container/workers/list_containers_complete_worker.rb" "~/repos/slamr-infrastructure-manager/lib/cybercents/slamr/core/infrastructure/manager/amqp/routes/container/list_containers_complete_listener.rb" "~/repos/slamr-backup-restore-service/config/environments/../settings.yml" "~/repos/slamr-backup-restore-service/config/environments/production.yml" "~/repos/slamr-backup-restore-service/config/environments/testing.yml" "~/repos/slamr-backup-restore-service/lib/cybercents/slamr/core/backuprestore/service/amqp/routes/backup/backup_create_listener.rb" "~/repos/slamr-backup-restore-service/lib/cybercents/slamr/core/backuprestore/service/amqp/helpers/infrastructure_manager_mixin.rb" "~/repos/slamr-backup-restore-service/lib/cybercents/slamr/core/backuprestore/service/amqp/routes/range/range_status_listener.rb" "~/repos/slamr-backup-restore-service/spec/cybercents/slamr/core/backuprestore/service/amqp/routes/range/range_list_listener_spec.rb" "~/repos/slamr-backup-restore-service/lib/cybercents/slamr/core/backuprestore/service/amqp/routes/backup/backup_controller/backup_create_controller.rb" "~/repos/slamr-backup-restore-service/lib/cybercents/slamr/core/backuprestore/service/amqp/routes/backup/backup_create_listener.rb" "~/repos/slamr-backup-restore-service/lib/cybercents/slamr/core/backuprestore/service/amqp/routes/backup/backup_controller/backup_create.rb" "~/.homesick/repos/dotfiles/home/.emacs" "~/.emacs" "~/repos/slamr-backup-restore-service/lib/cybercents/slamr/core/backuprestore/service/amqp/routes/backup/backup_routes.rb" "~/repos/slamr-backup-restore-service/lib/cybercents/slamr/core/backuprestore/service/amqp/routes/backup/backup_create_listener.rb" "~/repos/slamr-backup-restore-service/slamr-backup-restore-service.gemspec" "~/repos/slamr-backup-restore-service/lib/cybercents/slamr/core/backuprestore/service/amqp/routes/backup/backup_mixin/../../../helpers/activity_helpers.rb" "~/repos/slamr-backup-restore-service/spec/spec_helper.rb" "~/repos/slamr-backup-restore-service/spec/support/shared_examples.rb" "~/repos/slamr-backup-restore-service/config/environments/../settings.yml" "~/repos/slamr-backup-restore-service/config/environments/*.yml" "~/repos/slamr-backup-restore-service/lib/cybercents/slamr/core/backuprestore/service/amqp/routes/backup/../../../utility/property_buckets.rb" "~/repos/slamr-backup-restore-service/config/environments/../settings.yml" "~/repos/slamr-backup-restore-service/config/environments/development.yml" "~/repos/slamr-backup-restore-service/config/environments/production.yml" "~/repos/slamr-backup-restore-service/lib/cybercents/slamr/core/backuprestore/service/misc/MIXIN_README.md" "~/repos/slamr-backup-restore-service/.rubocop.yml" "~/repos/slamr-backup-restore-service/lib/cybercents/slamr/core/backuprestore/service/amqp/routes/backup/backup_delete_listener.rb" "~/repos/slamr-backup-restore-service/lib/cybercents/slamr/core/backuprestore/service/amqp/routes/backup/backup_utility/backup_create.rb" "~/repos/slamr-backup-restore-service/lib/cybercents/slamr/core/backuprestore/service/amqp/routes/restore/restore_routes.rb" "~/repos/slamr-orchestration-service/lib/cybercents/slamr/core/orchestration/service/amqp/helpers/backup_mixin.rb" "~/repos/slamr-orchestration-service/lib/cybercents/slamr/core/orchestration/service/utility/property_buckets.rb" "~/repos/slamr-orchestration-service/lib/cybercents/slamr/core/orchestration/service/amqp/routes/maintenance/#service_backup_listener.rb#" "~/repos/slamr-backup-restore-service/config/environments/production.yml" "~/repos/slamr-backup-restore-service/config/environments/development.yml" "~/repos/slamr-backup-restore-service/config/settings.yml" "~/repos/slamr-backup-restore-service/config/environments/*.yml" "~/repos/slamr-backup-restore-service/lib/cybercents/slamr/core/backuprestore/service/amqp/routes/backup/backup_routes.rb" "~/repos/slamr-backup-restore-service/lib/cybercents/slamr/core/backuprestore/service/utility/dir_tools_mixin.rb" "~/repos/slamr-backup-restore-service/lib/cybercents/slamr/core/backuprestore/service/amqp/routes/restore/restore_create_listener.rb" "~/repos/slamr-backup-restore-service/spec/cybercents/slamr/core/backuprestore/service/amqp/routes/restore/restore_create_listener_spec.rb" "~/repos/slamr-backup-restore-service/spec/cybercents/slamr/core/backuprestore/service/amqp/routes/restore/restore_list_listener_spec.rb" "~/repos/slamr-backup-restore-service/spec/cybercents/slamr/core/backuprestore/service/amqp/routes/backup/range_list_listener_spec.rb" "~/repos/slamr-backup-restore-service/lib/cybercents/slamr/core/backuprestore/service/amqp/routes/restore/restore_routes.rb" "~/repos/slamr-backup-restore-service/spec/cybercents/slamr/core/backuprestore/service/amqp/routes/backup/backup_update_listener_spec.rb" "~/repos/slamr-backup-restore-service/spec/cybercents/slamr/core/backuprestore/service/amqp/routes/backup/backup_delete_listener_spec.rb" "~/repos/slamr-backup-restore-service/lib/cybercents/slamr/core/backuprestore/service/amqp/routes/backup/backup_list_listener.rb" "~/repos/slamr-backup-restore-service/spec/cybercents/slamr/core/backuprestore/service/amqp/routes/backup/backup_list_listener_spec.rb" "~/repos/slamr-backup-restore-service/spec/cybercents/slamr/core/backuprestore/service/amqp/routes/backup/backup_create_listener_spec.rb" "~/repos/slamr-backup-restore-service/lib/cybercents/slamr/core/backuprestore/service/amqp/routes/backup/backup_create_listener.rb" "~/repos/slamr-backup-restore-service/lib/cybercents/slamr/core/backuprestore/service/amqp/routes/backup/backup_routes.rb" "~/repos/slamr-backup-restore-service/spec/cybercents/slamr/core/backuprestore/service/amqp/routes/range/range_estimate_listener_spec.rb" "~/repos/slamr-backup-restore-service/spec/cybercents/slamr/core/backuprestore/service/amqp/routes/range/range_list_listener_spec.rb" "~/repos/slamr-backup-restore-service/lib/cybercents/slamr/core/backuprestore/service/amqp/routes/range/range_routes.rb" "~/repos/slamr-backup-restore-service/spec/support/shared_examples.rb"))
(setq minibuffer-history '("doom-modeline" "nimbus-theme" "material-light" #("end" 0 3 (fontified t face font-lock-keyword-face)) "lsp-keymap-prefix" "data.json" "config/data" "develop" "123" "119" "develop" "deve ym" "devel yml" "test " "setting" "61" "dir tool" "suppor share" "estimate" "66" "core.rb" "test" "core.rb" "16" "21" "testing" "back routes" "bucket" ".rubo" ".yml" "core.rb" ".yml" "buckets.rb" #("def" 0 3 (face font-lock-keyword-face fontified t)) "mixin" "backup_create.r" "yml " "act help" "40" "environ " "25" "backup_routes" "191" "17" "back cre list" "core.rb" "version" "166" "environ test" "test" "helpers" "17" "140" "config" "dir_to" "core.rb" "spec_hel" "restore_routes" "lib/cy cor bac ser" "develop" "60" "45" "42" "33" "34" "development.y" "35" "produ" "51" "develop" "model" "yml  " "ruboc" "rubocop" "testing" "118" "service.rb" "ruboco" "develop" "yml" "submit" "develop" "122" "image router" "develop" ".yml " "sett" "config/" "export all li" "result format" "config/produc" "development." "image_manager/rou" "248" "#" "248" "development" "database/models" ".yml " "/seeds/"))
(setq buffer-name-history '("*Customize Group: Doom Modeline*" ".emacs" "custom.el" ".emacs" "*Messages*" "*Org Agenda*" "*Ibuffer*" "*Org Agenda*" "wood-projects.org" "personal.org" "*Ibuffer*" "code-projects.org" "family.org" "house.org" "todo.org" ".emacs" "*scratch*" "*About GNU Emacs*" "*Help*" "*Packages*" ".emacs" "*Help*" "*xref*" "backup_create_controller.rb" "backup_routes.rb" "*Warnings*" "slamr-backup-restore-service.gemspec" "*Clippy*" "*Help*" "service_backup_mixin.rb" ".emacs" "service_backup_mixin.rb" ".emacs" "service_backup_mixin.rb" ".emacs" "create_device_listener.rb" "device_routes.rb" "service.rb" ".emacs" "*Help*" ".emacs" "service.rb" "*Help*" ".emacs" "*Help*" "service.rb" "*Help*" ".emacs" "device_routes.rb" "*Warnings*" "*lsp-help*" "*About GNU Emacs*" "infrastructure_manager_mixin.rb" "backup_create_controller.rb" "infrastructure_manager_mixin.rb" "backup_create_controller.rb" "services.json" "list_containers_complete_worker.rb" "service_poller_helper.rb" "list_containers_complete_worker.rb" "data.json" "development.yml" "data.json" "development.yml" "services_loader.rb" "list_containers_listener.rb" "backup_create_controller.rb" "service_backup_mixin.rb" "*Flymake diagnostics for service_backup_mixin.rb*" "backup_create_controller.rb" "service_backup_mixin.rb" "backup_create_controller.rb" "service_backup_mixin.rb" "testing.yml" "production.yml" "settings.yml" "*Flymake diagnostics for backup_create_controller.rb*" "backup_create_listener.rb" "*Flymake diagnostics for service_backup_mixin.rb*" "*Flymake diagnostics for infrastructure_manager_mixin.rb*" "backup_create_controller.rb" "activity_helpers.rb" "backup_create_controller.rb" "*Flymake diagnostics for backup_create_controller.rb*" "backup_create_controller.rb" "backup_create_listener.rb" "backup_create_controller.rb" "dir_tools_mixin.rb" "dir_tools_mixin_spec.rb" "backup_create_controller.rb" "backup_create_controller_spec.rb" "backup_create_controller.rb" "dir_tools_mixin.rb" "backup_create_controller.rb" "settings.yml" "testing.yml" "dir_tools_mixin_spec.rb" "backup_create_listener.rb" "backup_create_controller.rb" "dir_tools_mixin.rb"))
(setq helm-M-x-input-history '("all the icons insta" "custom group" "pack lis pack" "custom them" "custom theme" "pack install" "load file" "pack lis" "load file" "mark down" "mark" "org" "org mode in" "load" "pack list pa" "org" "text" "comme reg" "packa" "comm" "pack" "load" "disab" "lsp ref" "repl str" "load file" "load" "load file" "treemacs" "pack" "lsp find re" "lsp type" "lsp format" "customi opt" "load" "de" "lsp mode" "lsp mod" "eldo" "eldoc" "de" "des" "descri" "oad" "des" "load" "seeing" "descr mode" "desc mod" "load file" "descr mod" "which" "load file" "load fil" "load file" "load" "load file" "load" "load-file" "load" "which" "pack" "uncomm" "comm re" "comm" "repl str" "fly" "repl str" "uncom reg" "comm reg" "repl str" "comm reg" "comm" "comm reg" "comm" "com" "com re" "repl str" "uncom" "comme" "comm" "uncom" "comm region" "comm reg" "load" "lsp" "com" "repl str" "comm reg" "comm" "comm reg" "repl st" "repl str" "comm" "sort lines" "comm reg" "sort" "repl str" "uncom reg" "uncom"))
