;; -*- mode: emacs-lisp; coding: utf-8-unix -*-
;; Minibuffer history file, automatically generated by ‘savehist’.

(setq savehist-minibuffer-history-variables '(xref--read-identifier-history org-read-date-history org-tags-history lsp-rename-history magit-revision-history xref--read-pattern-history helm-grep-history read-expression-history regexp-search-ring input-method-history grep-history ido-buffer-history extended-command-history ido-file-history query-replace-history yes-or-no-p-history file-name-history minibuffer-history empty-history buffer-name-history helm-M-x-input-history))
(setq xref--read-identifier-history '(#("send_backup_request" 0 19 (identifier-at-point t fontified t face font-lock-function-name-face)) #("lfs_listener" 0 12 (identifier-at-point t fontified t)) #("processing" 0 10 (identifier-at-point t fontified t face font-lock-constant-face))))
(setq org-read-date-history '("   "))
(setq org-tags-history '("planning" "frontend"))
(setq lsp-rename-history '("new_backup_id" "lfs_queue_name" "update_master_manifest_file" "container_compress" "rmq_conn" "bad_manifest_status_success" "bad_manifest_status_pending" "pending_manifest_data" "@master_manifest" "@master_manifest_file" "master_manifest" "staged_backup_dir" "@pending_backup_dir" "staged_backup_dir" "generate_master_manifest"))
(setq helm-grep-history '("containercompress"))
(setq regexp-search-ring '(#("backuping" 0 9 (isearch-case-fold-search t)) #("ing" 0 3 (isearch-case-fold-search t)) #("backing" 0 7 (isearch-case-fold-search t)) #(" restore" 0 8 (isearch-case-fold-search t)) #("status" 0 6 (isearch-case-fold-search t)) #("send_b" 0 6 (isearch-case-fold-search t)) #("manage min" 0 10 (isearch-case-fold-search t)) #("generate_lfs" 0 12 (isearch-case-fold-search t)) #("lsp" 0 3 (isearch-case-fold-search t)) #("send" 0 4 (isearch-case-fold-search t)) #("lsp-ui" 0 6 (isearch-case-fold-search t)) #("helm" 0 4 (isearch-case-fold-search t)) #("lsp-mode" 0 8 (isearch-case-fold-search t)) #("company-mode" 0 12 (isearch-case-fold-search t)) #("company" 0 7 (isearch-case-fold-search t)) #("company-ruby" 0 12 (isearch-case-fold-search t))))
(setq grep-history '("grep --color -nH --null -e validate_virtual_nic_network" "grep --color -nH --null -e DeviceTemplate"))
(setq ido-buffer-history '(".emacs" "*Warnings*" "*Compile-Log*" ".emacs"))
(setq extended-command-history '("replace-string" "lsp-find-definition" "elpy-refactor-extract-function" "ruby-refactor-extract-to-method" "manage-minor-mode" "package-list-packages" "lsp-ui-doc-mode" "lsp-ui-doc-show" "lsp-ui-sideline-toggle-symbols-info" "lsp-ui-peek-mode" "describe-mode" "lsp-ui-imenu--refresh" "lsp-ui-imenu" "load-file" "lsp-find-definition" "lsp-ui-peek-mode" "lsp-ui-sideline-toggle-symbols-info" "lsp-ui-sideline-mode" "lsp-ui-doc-mode" "package-list-packages" "lsp-find-references" "global-company-mode" "load-file" "global-company-mode" "package-list-packages" "org-priority-up" "visual-line-mode" "toggle-truncate-lines" "toggle-word-wrap" "replace-string" "package-list-packages" "customize-themes" "customize" "all-the-icons-install-fonts" "package-list-packages" "org-priority" "projectile-grep" "sort-lines" "replace-string" "load-file" "replace-string" "shell" "replace-string" "projectile-grep" "replace-string" "sort-lines" "replace-string" "sort-lines" "replace-string" "sort-lines" "replace-string" "markdown-mode" "replace-string" "projectile-grep" "replace-string" "insert-metova-copyright" "replace-string" "projectile-grep" "flymake-mode" "replace-string" "sort-lines" "insert-metova-copyright" "replace-string" "markdown-mode" "replace-string" "replace-regexp" "uncomment-region" "replace-string" "magit-status" "magit-diff" "magit-status" "replace-regexp" "load-file" "lsp-toggle-on-type-formatting" "replace-regexp" "magit-diff" "replace-string" "replace-regexp" "replace-string" "sort-lines" "replace-string" "insert-metova-copyright" "replace-string" "flymake-mode" "replace-string" "sort-lines" "replace-string" "insert-metova-copyright" "flymake-mode" "insert-metova-copyright" "flymake-mode" "replace-string" "insert-metova-copyright" "replace-string" "comment-region" "treemacs" "replace-string" "comment-region" "replace-string" "comment-region"))
(setq query-replace-history '("restore" "backup" "restore" "backup" "restoring" "backing up" "restore_running" "backup_running" "restore" "backup" "36" "97" "37" "39" "\" =>" "\":" "lfs_listener" "listener" "update_master_manifest_file" "write_master_manifest_file" "agents" "containers" "service" "container" "parsed_payload" "response" "complete" "start" "complete" "start" "=>" ":" "invalid_index_file_path" "bad_index_file_path" "send_backup_message_to_services" "collect_manifests" "" ":" "send_backup_message_to_services" "backup_large_file_services" "backup_large_file_services" "collect_manifests" "cmd_start = \"mkdir /home/jstoup/tcs/TEST_DIRS/#{container}_start\"" "cmd_stop = \"mkdir /home/jstoup/tcs/TEST_DIRS/#{container}_stop\"" "container" "service_name" "service_name" "container" "enable" "disable" "sorted_services" "parsed_payload" "#{parsed_payload}" "#{payload}" "'#{parsed_payload}" "parsed_payload:" "payload:" "node_id" "node_number" "container" "status" "container" "backup" "start" "backup" "compress" "stopping" "stoping" "stop" "start" "start" "compress" "stop" "compress" "start" "compress" "stop" "start" "start" "compress" "container_name" "tar_path" "nil" "@db" "abort" "update" "update" "delete" "list_backup" "start_backup" "abort" "update" "backup" "staging" "notes" "name" "9999" #("585d" 0 3 (face font-lock-string-face) 3 4 (rear-nonsticky t face font-lock-string-face)) "" "^+"))
(setq yes-or-no-p-history '("yes" "no" "yes" "no" "yes" "no" "yes"))
(setq file-name-history '("~/repos/slamr-backup-restore-agent/lib/cybercents/slamr/core/backuprestore/agent/amqp/routes/container/container_restore_listener.rb" "~/repos/slamr-backup-restore-agent/lib/cybercents/slamr/core/backuprestore/agent/amqp/routes/container/container_compress_listener.rb" "~/org/work-log.org" "~/org/meetings.org" "~/.homesick/repos/dotfiles/home/.emacs" "~/.emacs" "~/.homesick/repos/dotfiles/home/.emacs" "~/.emacs" "~/.tmux/themes/default-light.theme" "~/.tmux.conf" "~/.tmux" "~/org/work-log.org" "~/.bashrc" "~/.tmux.conf" "~/repos/slamr-backup-restore-service/lib/cybercents/slamr/core/backuprestore/service.rb" "~/.tmux.conf" "~/.tmux.conf.bak" "~/.tmux.conf" "~/.bashrc" "~/.tmux.conf" "~/.tmux/.tmux.conf" "~/.tmux.conf" "~/.emacs.d/custom.el" "~/org/meetings.org" "~/org/work-log.org" "~/.homesick/repos/dotfiles/home/.emacs" "~/.emacs" "~/org/work-log.org" "~/org/todos.org" "/usr/local/share/slamr/backups/storage/backup_restore_service/backups/dedupes_index.json" "~/repos/slamr-backup-restore-service/lib/cybercents/slamr/core/backuprestore/service/utility/master_manifest_mixin.rb" "~/repos/slamr-backup-restore-service/lib/cybercents/slamr/core/backuprestore/service/amqp/routes/backup/backup_complete_listener.rb" "~/repos/slamr-backup-restore-service/lib/cybercents/slamr/core/backuprestore/service/amqp/routes/backup/backup_start_listener.rb" "~/repos/slamr-backup-restore-agent/lib/cybercents/slamr/core/backuprestore/agent/utility/command.rb" "~/repos/slamr-backup-restore-agent/lib/cybercents/slamr/core/backuprestore/agent/utility/container_command_helper.rb" "~/repos/slamr-backup-restore-agent/lib/cybercents/slamr/core/backuprestore/agent/utility/container_service_control_helper.rb" "~/repos/slamr-backup-restore-agent/lib/cybercents/slamr/core/backuprestore/agent/utility/compression_mixin.rb" "~/repos/slamr-backup-restore-agent/lib/cybercents/slamr/core/backuprestore/agent/amqp/routes/status/status_backup_restore_listener.rb" "~/repos/slamr-backup-restore-agent/lib/cybercents/slamr/core/backuprestore/agent/amqp/routes/status/status_routes.rb" "~/repos/slamr-backup-restore-agent/lib/cybercents/slamr/core/backuprestore/agent/amqp/routes/container/container_backup_listener.rb" "~/repos/slamr-backup-restore-agent/lib/cybercents/slamr/core/backuprestore/agent/amqp/routes/container/container_stop_listener.rb" "~/repos/slamr-backup-restore-agent/lib/cybercents/slamr/core/backuprestore/agent/amqp/routes/container/container_start_listener.rb" "~/repos/slamr-backup-restore-agent/lib/cybercents/slamr/core/backuprestore/agent/amqp/routes/container/container_compress_listener.rb" "~/repos/slamr-backup-restore-agent/lib/cybercents/slamr/core/backuprestore/agent/amqp/routes/container/compress_listener.rb" "~/repos/slamr-backup-restore-agent/lib/cybercents/slamr/core/backuprestore/agent/utility/compression_mixin.rb" "~/repos/slamr-backup-restore-agent/lib/cybercents/slamr/core/backuprestore/agent/amqp/routes/container/container_routes.compress_listener.rb" "~/repos/slamr-backup-restore-agent/lib/cybercents/slamr/core/backuprestore/agent/amqp/routes/container/container_routes.rb" "TAGS" "~/repos/slamr-backup-restore-agent/lib/cybercents/slamr/core/backuprestore/agent/amqp/routes/container/container_routes.rb" "~/repos/slamr-backup-restore-agent/lib/cybercents/slamr/core/backuprestore/agent/amqp/routes/container/containerrtoues.rb" "~/repos/slamr-backup-restore-agent/lib/cybercents/slamr/core/backuprestore/agent/amqp/routes/container/containerroutes.rb" "TAGS" "~/repos/slamr-backup-restore-service/lib/cybercents/slamr/core/backuprestore/service/amqp/routes/backup/backup_list_listener.rb" "~/repos/slamr-backup-restore-service/.solargraph.yml" "~/repos/slamr-backup-restore-service/lib/cybercents/slamr/core/backuprestore/service/amqp/routes/backup/backup_update_listener.rb" "~/repos/slamr-backup-restore-service/lib/cybercents/slamr/core/backuprestore/service/amqp/routes/backup/backup_list_listener.rb" "~/repos/slamr-backup-restore-service/lib/cybercents/slamr/core/backuprestore/service/amqp/routes/backup/backup_update_listener.rb" "~/repos/slamr-backup-restore-service/spec/cybercents/slamr/core/backuprestore/service/amqp/routes/backup/backup_controller/backup_start_controller_spec.rb" "~/repos/slamr-backup-restore-service/lib/cybercents/slamr/core/backuprestore/service/amqp/routes/backup/backup_abort_listener.rb" "~/repos/slamr-backup-restore-service/lib/cybercents/slamr/core/backuprestore/service/amqp/routes/restore/restore_routes.rb" "~/repos/slamr-backup-restore-service/spec/cybercents/slamr/core/backuprestore/service/amqp/routes/restore/restore_start_listener_spec.rb" "~/repos/slamr-backup-restore-service/spec/cybercents/slamr/core/backuprestore/service/amqp/routes/backup/backup_controller/backup_start_controller_spec.rb" "~/repos/slamr-backup-restore-service/spec/cybercents/slamr/core/backuprestore/service/amqp/routes/backup/backup_controller/backup_create_controller_spec.rb" "~/repos/slamr-backup-restore-service/spec/cybercents/slamr/core/backuprestore/service/amqp/routes/backup/backup_create_listener_spec.rb" "~/repos/slamr-backup-restore-service/lib/cybercents/slamr/core/backuprestore/service/amqp/routes/backup/backup_routes.rb" "~/repos/slamr-backup-restore-service/lib/cybercents/slamr/core/backuprestore/service/amqp/routes/backup/backup_start_listener.rb" "~/repos/slamr-backup-restore-service/spec/spec_helper.rb" "~/repos/slamr-backup-restore-service/spec/cybercents/slamr/core/backuprestore/service/amqp/routes/backup/backup_start_listener_spec.rb" "~/repos/slamr-backup-restore-service/spec/cybercents/slamr/core/backuprestore/service/amqp/routes/backup/backup_create_listener_spec.rb" "~/repos/slamr-backup-restore-service/lib/cybercents/slamr/core/backuprestore/service/amqp/routes/backup/backup_start_listener.rb" "~/repos/slamr-backup-restore-service/config/environments/../settings.yml" "~/repos/slamr-backup-restore-service/config/environments/production.yml" "~/repos/slamr-backup-restore-service/config/environments/testing.yml" "~/.emacs" "~/repos/slamr-backup-restore-service/config/environments/../settings.yml" "~/repos/slamr-backup-restore-service/config/environments/production.yml" "~/repos/slamr-backup-restore-service/config/environments/testing.yml" "~/repos/slamr-backup-restore-service/lib/cybercents/slamr/core/backuprestore/service/amqp/helpers/file_handler_mixin.rb" "~/repos/slamr-backup-restore-service/lib/cybercents/slamr/core/backuprestore/service/amqp/helpers/file_hander_mixin.rb" "~/repos/slamr-backup-restore-service/lib/cybercents/slamr/core/backuprestore/service/amqp/routes/backup/backup_create_listener.rb" "~/repos/slamr-backup-restore-service/lib/cybercents/slamr/core/backuprestore/service/amqp/routes/restore/restore_routes.rb" "~/repos/slamr-backup-restore-service/" "~/repos/slamr-authentication-service/" "~/repos/slamr-backup-restore-service/lib/cybercents/slamr/core/backuprestore/service/amqp/routes/restore/restore_controller/restore_start_controller.rb" "~/repos/slamr-infrastructure-manager/spec/cybercents/slamr/core/infrastructure/amqp/container/start_container_listener_spec.rb" "~/repos/slamr-infrastructure-manager/spec/cybercents/slamr/core/infrastructure/amqp/container/stop_container_sync_listener_spec.rb" "~/repos/slamr-infrastructure-manager/spec/cybercents/slamr/core/infrastructure/amqp/container/start_container_sync_listener_spec.rb" "~/repos/slamr-infrastructure-manager/lib/cybercents/slamr/core/infrastructure/manager/amqp/routes/container/workers/stop_container_worker.rb" "~/repos/slamr-infrastructure-manager/lib/cybercents/slamr/core/infrastructure/manager/amqp/routes/container/workers/stop_container_sync_worker.rb" "~/repos/slamr-infrastructure-manager/lib/cybercents/slamr/core/infrastructure/manager/amqp/routes/container/workers/start_container_sync_worker.rb" "~/repos/slamr-infrastructure-manager/spec/cybercents/slamr/core/infrastructure/amqp/container/start_container_sync_listener_spec.rb" "~/.bashrc" "~/repos/slamr-backup-restore-service/lib/cybercents/slamr/core/backuprestore/service/amqp/routes/backup/backup_create_listener.rb" "~/repos/slamr-infrastructure-manager/lib/cybercents/slamr/core/infrastructure/manager/amqp/routes/container/workers/../start_container_sync_listener.rb" "~/.homesick/repos/dotfiles/home/.bashrc" "~/repos/slamr-backup-restore-service/lib/cybercents/slamr/core/backuprestore/service/amqp/routes/backup/backup_create_listener.rb" "~/repos/slamr-infrastructure-manager/lib/cybercents/slamr/core/infrastructure/manager/amqp/routes/container/container_routes.rb" "~/repos/slamr-infrastructure-manager/spec/cybercents/slamr/core/infrastructure/amqp/container/list_containers_complete_listener_spec.rb" "~/repos/slamr-backup-restore-service/lib/cybercents/slamr/core/backuprestore/service/core.rb" "~/repos/slamr-orchestration-service/lib/cybercents/slamr/core/orchestration/service/core.rb"))
(setq minibuffer-history '("compress_containers" "(services" "send_handshake" ".yml" "backup control" "26" "sending backup request" "core.rb" "complete" ".yml   " "start backup contr" "infra mixin" "file_handler mi" "backup start listener" ".yml" "restore routes.rb" "manifest" "20" "write_master_manifest_file" "error validating master manifest file" "create backup" "utility/" "production" "core.rb" "status " "241" "routes.rb backup" "develop" "29" "289" "29" "config yml" "mixin" "develop" "dev" "compress_container" "copy_files_to_backup" "Unable to find build" "70" "node_id" "yml" "status" "develop" "core.rb" "spec helper" "95" "82" "core.rb" "develop" "207" "config" "187" "production" "168" "file" "infra" "service backup listener_spec.rb" "mixin" "91" "service backup_list" "backup create listener" "backup create listen" "backup_create_lis" "routes" "166" "91" "develop" "core.rb" "produc" "234" "210" "249" "56" "testing" "service_mixin" "develop" "restore listener" "config" "devel" "produ" "service backup" "check ina" "82" "account_routes" "31" "accoun create list" "167" "authen authenticate" "hash passw" "config" "core.rb" "reset list" "account_routes" "authentication_routes" "routes authentication_" "slamr-authentication" "slamr-backup-restore" "slamr-authentication" "utility" "86"))
(setq buffer-name-history '("container_restore_listener.rb" "*lsp-help*" "compression_mixin.rb" "container_backup_listener.rb" "production.yml" "development.yml" "testing.yml" "settings.yml" "container_compress_listener.rb" "*xref*" "*Packages*" "*Help*" "*Customize Saved*" "*Flymake diagnostics for backup_start_controller.rb*" "*Help*" "*lsp-ui-imenu*" "backup_start_controller.rb" "*Help*" "*Packages*" "*xref*" "global_log_change_command.rb" "*Help*" "backup_start_controller.rb" ".tmux" "bin" "meetings.org" "production.yml" "work-log.org" "todos.org" "tickets.org" "work-log.org" "meetings.org" "work-log.org" "meetings.org" "*Org Agenda*" "todos.org" "*Org Agenda*" "notes.org" "meetings.org" "notes.org" "tickets.org" "*Org Agenda*" ".bashrc" ".tmux.conf" "CAPTURE-work-log.org" "*scratch*" ".tmux.conf" "*Customize Group: Emacs*" ".emacs" "tickets.org" "notes.org" "backup_start_controller.rb" "*grep </home/jstoup/repos/slamr-backup-restore-service/>*" "backup_complete_listener.rb" "backup_start_controller.rb" "*Ibuffer*" "backup_start_listener.rb" "file_handler_mixin_spec.rb" "file_handler_mixin.rb" "*rspec-compilation*" "file_handler_mixin.rb" "backup_start_controller.rb" "*xref*" "backup_start_controller_spec.rb" "backup_start_controller.rb" "*rspec-compilation*" "backup_start_controller.rb" "*scratch*" "*Org Agenda*" "backup_start_controller.rb" "settings.yml" "backup_start_controller.rb" "backup_complete_listener.rb" "*shell*" "dedupes_index.json" "backup_complete_listener.rb" "backup_start_controller.rb" "master_manifest_mixin.rb" "backup_complete_listener.rb" "backup_start_controller.rb" "backup_complete_listener.rb" "core.rb" "*Ibuffer*" "backup_complete_listener.rb" "*grep </home/jstoup/repos/slamr-backup-restore-service/>*" "*grep*" "master_manifest_mixin.rb" "index.html" "backup_routes.rb" "development.yml" "backup_start_controller.rb" "infrastructure_manager_mixin.rb" "backup_start_listener.rb" "core.rb" "backup_start_listener.rb" "range_status_listener.rb" "backup_routes.rb" "backup_start_listener.rb" "backup_routes.rb" "settings.yml"))
(setq helm-M-x-input-history '("repl str" "describ" "lsp " "refac fun" "refactor extr fun" "refactor" "manag min" "pack list pack" "lsp ui" "lsp ui doc" "lsp doc" "lsp ui side" "lsp ui peek" "lsp peek" "lsp ui peek" "describ mode" "lsp ui im" "lsp ime" "lsp ui imenu" "lsp ui im" "load file" "lsp find" "lsp ui peek" "lsp ui pee" "lsp ui side" "lsp ui sid" "lsp ui si" "lsp ui" "pack list pack" "lsp find" "lsp lens" "global com" "glob" "load file" "global comp" "pack list pa" "priority" "visual" "togg" "trunca" "word wrap" "wrap " "repl str" "pack list" "custom theme" "customiz" "all the icon" "pack list" "org prior" "org prio" "org pri" "grep pro" "sort lines" "sort line" "repl str" "load file" "repl str" "shell" "repl str" "proj grep" "repl str" "sort lines" "repl str" "sort line" "repl str" "sor li" "sort lines" "repl str" "mark" "repl str" "grep proj" "grep" "grep pro" "repl str" "metov" "repl str" "grep proj" "flymak" "repl str" "repl string" "repl str" "sort line" "metov" "repl str" "markd mod" "repl str" "reg re" "uncom" "repl str" "todo" "repl stri" "repl str" "magit" "reg" "load" "load-file" "lsp type" "reg repl" "magit diff" "repl str"))
(setq projectile-project-command-history '#s(hash-table size 65 test equal rehash-size 1.5 rehash-threshold 0.8125 data ()))
