;; -*- mode: emacs-lisp; coding: utf-8-unix -*-
;; Minibuffer history file, automatically generated by ‘savehist’.

(setq savehist-minibuffer-history-variables '(regexp-history xref--read-identifier-history org-read-date-history org-tags-history lsp-rename-history magit-revision-history xref--read-pattern-history helm-grep-history read-expression-history regexp-search-ring input-method-history grep-history ido-buffer-history extended-command-history ido-file-history query-replace-history yes-or-no-p-history file-name-history minibuffer-history empty-history buffer-name-history helm-M-x-input-history))
(setq xref--read-identifier-history '(#("control_services" 0 16 (face font-lock-function-name-face fontified t identifier-at-point t)) #("send_backup_request" 0 19 (identifier-at-point t fontified t face font-lock-function-name-face)) #("lfs_listener" 0 12 (identifier-at-point t fontified t)) #("processing" 0 10 (identifier-at-point t fontified t face font-lock-constant-face))))
(setq org-read-date-history '("   "))
(setq org-tags-history '("QA" "planning" "backend" "planning" "sprint-retro" "backend" "frontend" "sprint-retro" "planning" "QA" "planning" "testing" "planning" "frontend"))
(setq lsp-rename-history '("file_list" "new_backup_id" "lfs_queue_name" "update_master_manifest_file" "container_compress" "rmq_conn" "bad_manifest_status_success" "bad_manifest_status_pending" "pending_manifest_data" "@master_manifest" "@master_manifest_file" "master_manifest" "staged_backup_dir" "@pending_backup_dir" "staged_backup_dir" "generate_master_manifest"))
(setq helm-grep-history '("error processing"))
(setq regexp-search-ring '(#("highlight-indent" 0 16 (isearch-case-fold-search t)) #("highlight-in" 0 12 (isearch-case-fold-search t)) #("format-all" 0 10 (isearch-case-fold-search t)) #("mode-icons" 0 10 (isearch-case-fold-search t)) #("paradox" 0 7 (isearch-case-fold-search t)) #("rainbow" 0 7 (isearch-case-fold-search t)) #("rspec-mode" 0 10 (isearch-case-fold-search t)) #("highlight-define" 0 16 (isearch-case-fold-search t)) #("completion-at-point" 0 19 (isearch-case-fold-search t)) #("ido" 0 3 (isearch-case-fold-search t)) #("find file" 0 9 (isearch-case-fold-search t)) #("find-file" 0 9 (isearch-case-fold-search t)) #("3" 0 1 (isearch-case-fold-search t)) #("create" 0 6 (isearch-case-fold-search t)) #("11-05" 0 5 (isearch-case-fold-search t)) #("60" 0 2 (isearch-case-fold-search t))))
(setq grep-history '("grep --color -nH --null -e validate_virtual_nic_network" "grep --color -nH --null -e DeviceTemplate"))
(setq ido-buffer-history '(".emacs" "*Warnings*" "*Compile-Log*" ".emacs"))
(setq extended-command-history '("paradox-customize" "load-file" "paradox-list-packages" "format-all-buffer" "load-file" "paradox-list-packages" "load-file" "paradox-list-packages" "list-packages" "paradox-list-packages" "package-list-packages" "package-install" "format-all-buffer" "format-all-mode" "package-list-packages" "load-file" "lsp-find-references" "xref-find-references" "replace-string" "js-mode" "lsp-workspace-restart" "customize-themes" "package-list-packages" "org-sparse-tree" "org-tags-sparse-tree" "org-reload" "load-file" "customize-variable" "org-reload" "load-file" "org-reload" "load-file" "org-reload" "load-file" "org-reload" "load-file" "org-reload" "load-file" "org-store-link" "load-file" "org-mode-restart" "load-file" "describe-key" "org-priority-down" "org-priority-up" "load-file" "uncomment-region" "isearch-forward-regexp" "package-list-packages" "replace-string" "org-mode" "replace-string" "package-list-packages" "org-reload" "load-file" "which-key-mode" "load-file" "replace-string" "load-file" "indent-region" "load-file" "manage-minor-mode" "package-list-packages" "lsp-ui-doc-mode" "lsp-ui-doc-show" "lsp-ui-sideline-toggle-symbols-info" "lsp-ui-peek-mode" "describe-mode" "lsp-ui-imenu--refresh" "lsp-ui-imenu" "load-file" "lsp-find-definition" "lsp-ui-peek-mode" "lsp-ui-sideline-toggle-symbols-info" "lsp-ui-sideline-mode" "lsp-ui-doc-mode" "package-list-packages" "lsp-find-references" "global-company-mode" "load-file" "global-company-mode" "package-list-packages" "org-priority-up" "visual-line-mode" "toggle-truncate-lines" "toggle-word-wrap" "replace-string" "package-list-packages" "customize-themes" "customize" "all-the-icons-install-fonts" "package-list-packages" "org-priority" "projectile-grep" "sort-lines" "replace-string" "load-file" "replace-string" "shell" "replace-string"))
(setq query-replace-history '("" "
" "" "$" "compressed_file_name" "compressed_file" "agent" "container" "agent" "container" "*** TODO [#A] " "- [ ] " "*** TODO [#A] " " - [ ] " "Created: " "Started: " "36" "97" "37" "39" "\" =>" "\":" "lfs_listener" "listener" "update_master_manifest_file" "write_master_manifest_file" "agents" "containers" "service" "container" "parsed_payload" "response" "complete" "start" "complete" "start" "=>" ":" "invalid_index_file_path" "bad_index_file_path" "send_backup_message_to_services" "collect_manifests" "" ":" "send_backup_message_to_services" "backup_large_file_services" "backup_large_file_services" "collect_manifests" "cmd_start = \"mkdir /home/jstoup/tcs/TEST_DIRS/#{container}_start\"" "cmd_stop = \"mkdir /home/jstoup/tcs/TEST_DIRS/#{container}_stop\"" "container" "service_name" "service_name" "container" "enable" "disable" "sorted_services" "parsed_payload" "#{parsed_payload}" "#{payload}" "'#{parsed_payload}" "parsed_payload:" "payload:" "node_id" "node_number" "container" "status" "container" "backup" "start" "backup" "compress" "stopping" "stoping" "stop" "start" "start" "compress" "stop" "compress" "start" "compress" "stop" "start" "start" "compress" "container_name" "tar_path" "nil" "@db" "abort" "update" "update" "delete" "list_backup" "start_backup" "abort" "update" "backup" "staging"))
(setq yes-or-no-p-history '("yes" "	yes" "yes" "no" "yes" "no" "yes" "no" "yes" "no" "yes"))
(setq file-name-history '("~/.homesick/repos/dotfiles/home/.emacs" "~/.emacs" "~/.homesick/repos/dotfiles/home/.emacs" "~/.emacs" "~/.homesick/repos/dotfiles/home/.emacs" "~/.emacs" "~/org/*" #("/ssh:cents@dev-range-6|sudo:root@dev-range-6:/opt/slamr/slamr-backup-restore-agent/lib/cybercents/slamr/core/backuprestore/agent/utility/service_control_mixin.rb" 28 32 (tramp-default t) 33 44 (tramp-default t)) "~/org/*" "~/tcs/storage/master_manifest.json.TEST.pretty" "~/tcs/storage/master_manifest.json.TEST" "~/repos/slamr-backup-restore-agent/lib/cybercents/slamr/core/backuprestore/agent/amqp/routes/container/restore_mixin.rb" "~/.emacs" "~/org/*" "~/.emacs" "~/org/*" "~/.emacs" "~/org/*" "~/.emacs" "~/org/*" "~/org/meetings.org" "~/.homesick/repos/dotfiles/home/.emacs" "~/org/meetings.org" "~/.homesick/repos/dotfiles/home/.emacs" "~/org/meetings.org" "~/.homesick/repos/dotfiles/home/.emacs" "~/org/meetings.org" "~/.homesick/repos/dotfiles/home/.emacs" "~/.emacs" "~/org/*" "~/org/meetings.org" "~/.homesick/repos/dotfiles/home/.emacs" "~/.emacs" "~/org/*" "~/.emacs" "~/org/*" "~/.emacs" "~/org/*" "~/org/todos.org" "~/.homesick/repos/dotfiles/home/.emacs" "~/.emacs" "~/org/*" "~/.homesick/repos/dotfiles/home/.emacs" "~/.emacs" "~/org/*" "~/.homesick/repos/dotfiles/home/.emacs" "~/.emacs" "~/.homesick/repos/dotfiles/home/.emacs" "~/.emacs" "~/.emacs.d/custom.el" "~/.emacs" "~/org/*" "~/.emacs" "~/org/*" "~/.homesick/repos/dotfiles/home/.emacs" "~/.emacs" "~/org/*" "~/.emacs" "~/org/work-log.org" "~/org/tickets.org" "~/.emacs" "~/org/*" "~/.homesick/repos/dotfiles/home/.emacs" "~/org/work-log.org" "~/.emacs" "~/org/notes.org" "~/org/tickets.org" "~/.homesick/repos/dotfiles/home/.emacs" "~/.emacs" "~/org/tickets.org" "~/org/todos.org" "~/.homesick/repos/dotfiles/home/.emacs" "~/.emacs" "~/org/tickets.org" "~/org/work-log.org" "~/org/meetings.org" "~/.homesick/repos/dotfiles/home/.emacs" "~/.emacs" "~/.homesick/repos/dotfiles/home/.emacs" "~/.emacs" "~/.tmux/themes/default-light.theme" "~/.tmux.conf" "~/.tmux" "~/org/work-log.org" "~/.bashrc" "~/.tmux.conf" "~/repos/slamr-backup-restore-service/lib/cybercents/slamr/core/backuprestore/service.rb" "~/.tmux.conf" "~/.tmux.conf.bak" "~/.tmux.conf" "~/.bashrc" "~/.tmux.conf" "~/.tmux/.tmux.conf" "~/.tmux.conf" "~/.emacs.d/custom.el" "~/org/meetings.org" "~/org/work-log.org" "~/.homesick/repos/dotfiles/home/.emacs" "~/.emacs" "~/org/work-log.org"))
(setq minibuffer-history '("paradox" "container compress lis" "container_backup lis" "org-tags-column" "backup control" "26" "sending backup request" "core.rb" "complete" ".yml   " "start backup contr" "infra mixin" "file_handler mi" "backup start listener" ".yml" "restore routes.rb" "manifest" "20" "write_master_manifest_file" "error validating master manifest file" "create backup" "utility/" "production" "core.rb" "status " "241" "routes.rb backup" "develop" "29" "289" "29" "config yml" "mixin" "develop" "dev" "compress_container" "copy_files_to_backup" "Unable to find build" "70" "node_id" "yml" "status" "develop" "core.rb" "spec helper" "95" "82" "core.rb" "develop" "207" "config" "187" "production" "168" "file" "infra" "service backup listener_spec.rb" "mixin" "91" "service backup_list" "backup create listener" "backup create listen" "backup_create_lis" "routes" "166" "91" "develop" "core.rb" "produc" "234" "210" "249" "56" "testing" "service_mixin" "develop" "restore listener" "config" "devel" "produ" "service backup" "check ina" "82" "account_routes" "31" "accoun create list" "167" "authen authenticate" "hash passw" "config" "core.rb" "reset list" "account_routes" "authentication_routes" "routes authentication_" "slamr-authentication" "slamr-backup-restore" "slamr-authentication" "utility" "86"))
(setq buffer-name-history '(".emacs" "*Packages*" ".emacs" "*scratch*" "*Packages*" "*Help*" "*Packages*" ".emacs" "*Packages*" ".emacs" "*Dates*" "*Messages*" ".emacs" "work-log.org" "*Org Agenda*" "todos.org" "tickets.org" "work-log.org" "todos.org" "*Flymake diagnostics for service_control_mixin.rb*" "container_backup_listener.rb" "service_control_mixin.rb" "container_backup_listener.rb" "command.rb" "*xref*" "work-log.org" "*Org Agenda*" "todos.org" "container_backup_listener.rb" "container_compress_listener.rb" "container_compress_listener_spec.rb" "master_manifest.json.TEST.pretty" "container_restore_listener.rb" "container_backup_listener.rb" "*xref*" "container_compress_listener.rb" "container_restore_listener.rb" "restore_mixin.rb" "master_manifest.json.TEST" "container_restore_listener.rb" "meetings.org" "work-log.org" "tickets.org" "*Org Agenda(a:2021-11-02)" "tickets.org" "meetings.org" "tickets.org" "work-log.org" "*Packages*" "*Help*" "*Compile-Log*" "tickets.org" "work-log.org" "tickets.org" "*scratch*" ".emacs" "#meetings.org#" ".emacs" "*Org Agenda*" ".emacs" "meetings.org" "*Customize Option: Org Tags Column*" "meetings.org" "*Org Agenda*" "meetings.org" "todos.org" "work-log.org" ".emacs" "tickets.org" ".emacs" "meetings.org" "work-log.org" "*Org Agenda*" "todos.org" ".emacs" "meetings.org" "custom.el" ".emacs" "*Help*" "*Packages*" "custom.el" ".emacs" "*Org Agenda*" "meetings.org" "tickets.org" "todos.org" "work-log.org" "*Compile-Log*" "*Help*" "*Packages*" "tickets.org" "*Org Agenda*" "*Ibuffer*" ".emacs" "meetings.org" "backup_start_controller.rb" ".emacs" "todos.org" "*Messages*" "meetings.org"))
(setq helm-M-x-input-history '("parado cus" "load file" "pack " "format" "load file" "paradox" "load file" "paradox " "paradox" "list pack" "paradox lis" "list pac" "pack inst" "format" "pack li" "load file" "references" "repl str" "js" "lsp star" "custom" "cus" "pack list pack" "pack list pac" "sparse " "sparse tr" "org relo" "load file" "cust var" "org reload" "load file" "org relo" "load file" "org reloa" "load file" "org reloa" "load file" "reload org" "reload o" "load file" "org store link" "load file" "org mode re" "load file" "describ key" "org prior down" "org prior up" "load file" "uncomm" "rege sear" "pack lis" "repl str" "org mode" "repl str" "pack lis pac" "org re" "load file" "whic" "load file" "repl str" "load file" "indent reg" "load file" "manag min" "pack list pack" "lsp ui" "lsp ui doc" "lsp doc" "lsp ui side" "lsp ui peek" "lsp peek" "lsp ui peek" "describ mode" "lsp ui im" "lsp ime" "lsp ui imenu" "lsp ui im" "load file" "lsp find" "lsp ui peek" "lsp ui pee" "lsp ui side" "lsp ui sid" "lsp ui si" "lsp ui" "pack list pack" "lsp find" "lsp lens" "global com" "glob" "load file" "global comp" "pack list pa" "priority" "visual" "togg" "trunca" "word wrap" "wrap " "repl str"))
(setq projectile-project-command-history '#s(hash-table size 65 test equal rehash-size 1.5 rehash-threshold 0.8125 data ()))
